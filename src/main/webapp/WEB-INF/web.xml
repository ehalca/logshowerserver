<?xml version="1.0" encoding="UTF-8"?>
<web-app id="WebApp_ID" version="3.0"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">

 <display-name>LogShower</display-name>
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>
	 <!--  <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    Configure ContextLoaderListener to use JavaConfigWebApplicationContext
         instead of the default XmlWebApplicationContext
    <context-param>
        <param-name>contextClass</param-name>
        <param-value>org.springframework.config.java.JavaConfigWebApplicationContext</param-value>
    </context-param>
    Configuration locations must consist of one or more comma- or space-delimited
         fully-qualified @Configuration classes
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>com.ehalca.config.BaseConfig</param-value>
    </context-param>

    Declare a Spring MVC DispatcherServlet as usual
    <servlet>
        <servlet-name>dispatcher</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        Configure DispatcherServlet to use JavaConfigWebApplicationContext
             instead of the default XmlWebApplicationContext
        <init-param>
            <param-name>contextClass</param-name>
            <param-value>org.springframework.config.java.AnnotationConfigWebApplicationContext</param-value>
        </init-param>
        Again, config locations must consist of one or more comma- or space-delimited
             and fully-qualified @Configuration classes
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>com.ehalca.config.MVCConfig</param-value>
        </init-param>
    </servlet>
     <servlet-mapping>
      <servlet-name>dispatcher</servlet-name>
      <url-pattern>/app/*</url-pattern>
  </servlet-mapping> -->
</web-app>
